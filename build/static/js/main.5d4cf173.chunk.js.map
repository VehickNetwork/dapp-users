{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","config.tsx","components/PageTitle/index.tsx","pages/Dashboard/Actions/index.tsx","pages/Dashboard/TopInfo.tsx","apiRequests/index.tsx","pages/Dashboard/Transactions/txStatus.tsx","pages/Dashboard/Transactions/StatusIcon.tsx","pages/Dashboard/Transactions/TransactionsList.tsx","assets/img/heart.svg","pages/Dashboard/Transactions/index.tsx","pages/Dashboard/index.tsx","pages/Home/index.tsx","pages/Transaction/index.tsx","routes.ts","components/Layout/Footer/index.tsx","components/Layout/Navbar/index.tsx","components/Layout/index.tsx","pages/PageNotFound/index.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","contractAddress","dAppName","withPageTitle","title","Component","Memoized","memo","useEffect","document","Actions","account","useGetAccountInfo","hasPendingTransactions","useGetPendingTransactions","network","useGetNetworkConfig","address","React","hasVin","setHasVin","hasMeasureUnit","setHasMeasureUnit","setTransactionSessionId","inputText","setInputText","query_Vin","Query","Address","func","ContractFunction","args","AddressValue","ProxyProvider","apiAddress","queryContract","then","returnData","encoded","console","log","undefined","catch","err","error","query_measureUnit","sendTransactions","transactionServices","sendMileageTransaction","a","hex","Number","toString","length","String","MileageTransactionPayload","TransactionPayload","contractCall","setFunction","setArgs","BytesValue","fromHex","build","estimatedGasLimit","GasLimit","NetworkConfig","MinGasLimit","valueOf","forTransfer","mileageTransaction","value","data","gasLimit","receiver","refreshAccount","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sessionId","sendVinTransaction","vinTransactionPayload","fromUTF8","vinTransaction","sendMeasureUnitTransaction","measureUnitTransactionPayload","measureUnitTransaction","className","onClick","icon","faArrowUp","href","onChange","event","target","TopInfo","Denominate","balance","fetchTransactions","url","timeout","axios","get","params","sender","condition","size","success","getTransactions","txStatus","pending","notExecuted","fail","StatusIcon","Icon","tx","incomingTransaction","status","faBan","faTimes","faArrowDown","sortByDate","b","timestamp","_desc","_g","fakeSender","TransactionList","doubleOwnTransactions","filter","blockHash","sortedTransactions","el","sort","i","explorerAddress","txHash","Trim","text","moment","unix","format","decimals","Transactions","useGetActiveTransactionsStatus","hasActiveTransactions","useState","transactionsFetched","state","setState","TransactionsList","PageState","faExchangeAlt","Dashboard","Home","to","routeNames","unlock","Transaction","search","useLocation","query","URLSearchParams","fromEntries","faCheck","iconClass","description","dashboard","home","transaction","ledger","walletconnect","mappedRoutes","path","component","authenticatedRoute","route","requiresAuth","Boolean","wrappedComponent","_excluded","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHeart","_ref","svgRef","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","ref","stroke","strokeWidth","fillRule","d","ForwardRef","Footer","Navbar","isLoggedIn","Nav","NavItem","logout","window","location","origin","Layout","children","routes","unlockRoute","PageNotFound","pathname","faSearch","TransactionsToastList","DappUI","SignTransactionsModals","NotificationModal","UnlockPage","DappCorePages","App","environment","customNetworkConfig","name","apiTimeout","completedTransactionsDelay","element","loginRoute","index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5d4cf173.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 340,\n\t\"./bls_c.js\": 366\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 654;","export const contractAddress =\n  'erd1qqqqqqqqqqqqqpgq0pahcf33c0u05uqpk679t7lmqk273slgfuuqy33lec';\n\nexport const dAppName = 'Vehick Network';\n","import React, { useEffect, memo } from 'react';\n\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\n  const Memoized = memo(Component);\n\n  useEffect(() => {\n    document.title = title;\n  }, []);\n  return <Memoized />;\n};\n\nexport default withPageTitle;\n","import * as React from 'react';\n\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetPendingTransactions,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  ProxyProvider,\n  BytesValue,\n  Query,\n  TransactionPayload,\n  GasLimit,\n  NetworkConfig\n} from '@elrondnetwork/erdjs';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { contractAddress } from 'config';\n\nconst Actions = () => {\n  const account = useGetAccountInfo();\n  const { hasPendingTransactions } = useGetPendingTransactions();\n  const { network } = useGetNetworkConfig();\n  const { address } = account;\n  const gasLimitMultiplier = 25;\n\n  const [hasVin, setHasVin] = React.useState<boolean>();\n  const [hasMeasureUnit, setHasMeasureUnit] = React.useState<boolean>();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  const [inputText, setInputText] = React.useState<string>();\n  function handleChange(event: any) {\n    setInputText(event.target.value);\n    console.log(inputText);\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  React.useEffect(() => {\n    const query_Vin = new Query({\n      address: new Address(contractAddress),\n      func: new ContractFunction('getVIN'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy_Vin = new ProxyProvider(network.apiAddress);\n    proxy_Vin\n      .queryContract(query_Vin)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        console.log(encoded);\n        switch (encoded) {\n          case undefined:\n            setHasVin(false);\n            break;\n          case '':\n            setHasVin(false);\n            break;\n          default: {\n            setHasVin(true);\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n    const query_measureUnit = new Query({\n      address: new Address(contractAddress),\n      func: new ContractFunction('getMeasureUnit'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy_mesureUnit = new ProxyProvider(network.apiAddress);\n    proxy_mesureUnit\n      .queryContract(query_measureUnit)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        console.log(encoded);\n        switch (encoded) {\n          case undefined:\n            setHasMeasureUnit(false);\n            break;\n          case '':\n            setHasMeasureUnit(false);\n            break;\n          default: {\n            setHasMeasureUnit(true);\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendMileageTransaction = async () => {\n    let hex = Number(inputText).toString(16);\n    if (hex.length % 2 == 1) {\n      hex = String('0' + hex);\n    }\n    const MileageTransactionPayload = TransactionPayload.contractCall()\n      .setFunction(new ContractFunction('addMileage'))\n      .setArgs([BytesValue.fromHex(hex)])\n      .build();\n    const estimatedGasLimit = new GasLimit(\n      (new NetworkConfig().MinGasLimit.valueOf() +\n        GasLimit.forTransfer(MileageTransactionPayload).valueOf()) *\n        new GasLimit(gasLimitMultiplier).valueOf()\n    );\n    const mileageTransaction = {\n      value: '0',\n      data: new String(MileageTransactionPayload),\n      gasLimit: estimatedGasLimit,\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: mileageTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Mileage transaction',\n        errorMessage: 'An error has occured during addMileage',\n        successMessage: 'Mileage transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const sendVinTransaction = async () => {\n    const vinTransactionPayload = TransactionPayload.contractCall()\n      .setFunction(new ContractFunction('addVIN'))\n      .setArgs([BytesValue.fromUTF8(String(inputText))])\n      .build();\n    const estimatedGasLimit = new GasLimit(\n      (new NetworkConfig().MinGasLimit.valueOf() +\n        GasLimit.forTransfer(vinTransactionPayload).valueOf()) *\n        new GasLimit(gasLimitMultiplier).valueOf()\n    );\n    const vinTransaction = {\n      value: '0',\n      data: new String(vinTransactionPayload),\n      gasLimit: estimatedGasLimit,\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: vinTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vin transaction',\n        errorMessage: 'An error has occured during Vin',\n        successMessage: 'Vin transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const sendMeasureUnitTransaction = async () => {\n    const measureUnitTransactionPayload = TransactionPayload.contractCall()\n      .setFunction(new ContractFunction('addMeasureUnit'))\n      .setArgs([BytesValue.fromUTF8(String(inputText))])\n      .build();\n    const estimatedGasLimit = new GasLimit(\n      (new NetworkConfig().MinGasLimit.valueOf() +\n        GasLimit.forTransfer(measureUnitTransactionPayload).valueOf()) *\n        new GasLimit(gasLimitMultiplier).valueOf()\n    );\n    const measureUnitTransaction = {\n      value: '0',\n      data: new String(measureUnitTransactionPayload),\n      gasLimit: estimatedGasLimit,\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: measureUnitTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing MeasureUnit transaction',\n        errorMessage: 'An error has occured during MeasureUnit',\n        successMessage: 'MeasureUnit transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  return (\n    <div className='d-flex mt-4 justify-content-center'>\n      {hasVin && hasMeasureUnit && !hasPendingTransactions ? (\n        <div className='action-btn' onClick={sendMileageTransaction}>\n          <button className='btn'>\n            <FontAwesomeIcon icon={faArrowUp} className='text-primary' />\n          </button>\n          <a href='/' className='text-white text-decoration-none'>\n            addMileage\n          </a>\n        </div>\n      ) : (\n        <>\n          <div className='d-flex flex-column'>\n            <div\n              {...{\n                className: 'action-btn not-allowed disabled'\n              }}\n            ></div>\n          </div>\n        </>\n      )}\n      {!hasVin && !hasPendingTransactions ? (\n        <div className='d-flex flex-column'>\n          <div className='action-btn' onClick={sendVinTransaction}>\n            <button className='btn'>\n              <FontAwesomeIcon icon={faArrowUp} className='text-primary' />\n            </button>\n            <span className='text-white'>\n              <a href='/' className='text-white text-decoration-none'>\n                Add VIN\n              </a>\n            </span>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className='d-flex flex-column'>\n            <div\n              {...{\n                className: 'action-btn disabled'\n              }}\n            ></div>\n          </div>\n        </>\n      )}\n      {!hasMeasureUnit && !hasPendingTransactions ? (\n        <div className='d-flex flex-column'>\n          <div className='action-btn' onClick={sendMeasureUnitTransaction}>\n            <button className='btn'>\n              <FontAwesomeIcon icon={faArrowUp} className='text-primary' />\n            </button>\n            <span className='text-white'>\n              <a href='/' className='text-white text-decoration-none'>\n                Add Measure Unit\n              </a>\n            </span>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className='d-flex flex-column'>\n            <div\n              {...{\n                className: 'action-btn disabled'\n              }}\n            ></div>\n          </div>\n        </>\n      )}\n      <div>\n        <input onChange={handleChange}></input>\n      </div>\n    </div>\n  );\n};\n\nexport default Actions;\n","import * as React from 'react';\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { contractAddress } from 'config';\n\nconst TopInfo = () => {\n  const { address, account } = useGetAccountInfo();\n\n  return (\n    <div className='text-white' data-testid='topInfo'>\n      <div className='mb-1'>\n        <span className='opacity-6 mr-1'>Your address:</span>\n        <span data-testid='accountAddress'> {address}</span>\n      </div>\n      <div className='mb-4'>\n        <span className='opacity-6 mr-1'>Contract address:</span>\n        <span data-testid='contractAddress'> {contractAddress}</span>\n      </div>\n      <div>\n        <h3 className='py-2'>\n          <DappUI.Denominate value={account.balance} data-testid='balance' />\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default TopInfo;\n","import axios from 'axios';\n\ninterface GetLatestTransactionsType {\n  apiAddress: string;\n  address: string;\n  contractAddress: string;\n  timeout: number;\n  page?: number;\n  url?: string;\n}\n\nconst fetchTransactions = (url: string) =>\n  async function getTransactions({\n    apiAddress,\n    address,\n    contractAddress,\n    timeout\n  }: GetLatestTransactionsType) {\n    try {\n      const { data } = await axios.get(`${apiAddress}${url}`, {\n        params: {\n          sender: address,\n          receiver: contractAddress,\n          condition: 'must',\n          size: 25\n        },\n        timeout\n      });\n\n      return {\n        data: data,\n        success: data !== undefined\n      };\n    } catch (err) {\n      return {\n        success: false\n      };\n    }\n  };\n\nexport const getTransactions = fetchTransactions('/transactions');\nexport const getTransactionsCount = fetchTransactions('/transactions/count');\n","const txStatus = {\n  pending: 'Pending',\n  notExecuted: 'Not Executed',\n  success: 'Success',\n  fail: 'Failed'\n};\n\nexport default txStatus;\n","import React from 'react';\nimport {\n  faArrowUp,\n  faArrowDown,\n  faBan,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport txStatus from './txStatus';\nimport { TransactionType } from './types';\n\ninterface StatusIconType {\n  tx: TransactionType;\n  incomingTransaction: boolean;\n}\n\nconst StatusIcon = ({ tx, incomingTransaction }: StatusIconType) => {\n  let Icon;\n  switch (tx.status) {\n    case txStatus.notExecuted:\n      Icon = () => <FontAwesomeIcon icon={faBan} className='text-danger' />;\n      break;\n    case txStatus.fail:\n      Icon = () => <FontAwesomeIcon icon={faTimes} className='text-danger' />;\n      break;\n    case txStatus.success:\n      Icon = () => (\n        <FontAwesomeIcon\n          icon={incomingTransaction ? faArrowUp : faArrowDown}\n          className='text-secondary'\n        />\n      );\n      break;\n    default:\n      Icon = () => (\n        <FontAwesomeIcon\n          icon={incomingTransaction ? faArrowUp : faArrowDown}\n          className='text-secondary'\n        />\n      );\n  }\n  return (\n    <i className='m-3 circle'>\n      <Icon />\n    </i>\n  );\n};\n\nexport default StatusIcon;\n","import React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport moment from 'moment';\nimport StatusIcon from './StatusIcon';\nimport txStatus from './txStatus';\nimport { TransactionType } from './types';\n\nfunction sortByDate(a: TransactionType, b: TransactionType) {\n  if (a.timestamp < b.timestamp) {\n    return 1;\n  }\n  if (a.timestamp > b.timestamp) {\n    return -1;\n  }\n  return 0;\n}\n\nconst fakeSender =\n  'erd000000000000000000000000000000000000000000000000000000000a';\n\nconst TransactionList = ({\n  transactions\n}: {\n  transactions: TransactionType[];\n}) => {\n  const { network } = useGetNetworkConfig();\n  const account = useGetAccountInfo();\n  const incoming = (sender: string) =>\n    sender === account.address && sender !== fakeSender;\n\n  // eslint-disable-next-line\n  const doubleOwnTransactions = transactions\n    .filter((tx) => tx.sender === tx.receiver && tx.blockHash !== '')\n    .map((tx) => ({ ...tx, sender: fakeSender, timestamp: tx.timestamp + 1 }));\n\n  const sortedTransactions: TransactionType[] = (\n    [\n      ...transactions,\n      ...(doubleOwnTransactions.length > 0 ? doubleOwnTransactions : [])\n    ].filter((el: any) => el !== undefined) as any\n  ).sort(sortByDate);\n\n  return (\n    <div className='p-3 mt-3'>\n      <h4 className='mb-3 font-weight-normal'>Smart Contract Transactions</h4>\n      <div className='table-responsive'>\n        <table className='transactions table pb-3'>\n          <thead>\n            <tr className='bg-light'>\n              <th className='border-0 font-weight-normal'></th>\n              <th className='border-0 font-weight-normal'>Tx hash</th>\n              <th className='border-0 font-weight-normal'>Date</th>\n              <th className='border-0 font-weight-normal'>Amount</th>\n            </tr>\n          </thead>\n          <tbody data-testid='transactionsList'>\n            {sortedTransactions.map((tx: TransactionType, i) => {\n              const incomingTransaction = incoming(tx.sender);\n\n              return (\n                <tr key={tx.txHash + i}>\n                  <td>\n                    <div\n                      className='transaction-icon bg-light d-flex align-items-center justify-content-center'\n                      title={txStatus[tx.status]}\n                    >\n                      <StatusIcon\n                        tx={tx}\n                        incomingTransaction={incomingTransaction}\n                      />\n                    </div>\n                  </td>\n                  <td className='transaction-hash'>\n                    <a\n                      href={`${network.explorerAddress}/transactions/${tx.txHash}`}\n                      {...{\n                        target: '_blank'\n                      }}\n                      title='View in Explorer'\n                    >\n                      <DappUI.Trim data-testid='txHash' text={tx.txHash} />\n                    </a>\n                  </td>\n                  <td>\n                    {moment.unix(tx.timestamp).format('MMM Do YYYY, h:mm A')}\n                  </td>\n                  <td className='text-right'>\n                    {tx.value === '0' ? (\n                      ''\n                    ) : (\n                      <>{tx.sender === account.address ? '-' : '+'}</>\n                    )}\n                    <DappUI.Denominate value={tx.value} decimals={2} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className='d-flex justify-content-center'>\n        <a\n          href={`${network.explorerAddress}/address/${account.address}`}\n          {...{\n            target: '_blank'\n          }}\n        >\n          See all transactions\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","var _desc, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"14px\",\n    height: \"12px\",\n    viewBox: \"0 0 14 12\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"heart\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"heart\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.00249318,12 L1.23954171,6.67000631 C0.219967339,5.73025806 -0.214165447,4.32384166 0.101003225,2.98159749 C0.416171897,1.63935333 1.4326464,0.565685745 2.76676674,0.165841807 C4.10088708,-0.234002131 5.54948604,0.100868016 6.56580179,1.04405825 L7.00249318,1.44795492 L7.43918869,1.04405825 C9.01100287,-0.409657356 11.4775242,-0.328715349 12.9483183,1.22484728 C14.4191125,2.77840991 14.3372196,5.21629062 12.7654055,6.67000631 L7.00249318,12 Z\",\n    id: \"Path\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeart);\nexport default __webpack_public_path__ + \"static/media/heart.8edd3f99.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  transactionServices,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getTransactions } from 'apiRequests';\nimport { contractAddress } from 'config';\nimport TransactionsList from './TransactionsList';\nimport { StateType } from './types';\n\nconst Transactions = () => {\n  const {\n    network: { apiAddress }\n  } = useGetNetworkConfig();\n  const { success, fail, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const [state, setState] = React.useState<StateType>({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(({ data, success: transactionsFetched }) => {\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n\n  const { transactions } = state;\n\n  return transactions.length > 0 ? (\n    <TransactionsList transactions={transactions} />\n  ) : (\n    <div className='my-5'>\n      <DappUI.PageState\n        icon={faExchangeAlt}\n        className='text-muted fa-3x'\n        title='No Transactions'\n      />\n    </div>\n  );\n};\n\nexport default Transactions;\n","import * as React from 'react';\nimport Actions from './Actions';\nimport TopInfo from './TopInfo';\nimport Transactions from './Transactions';\n\nconst Dashboard = () => {\n  return (\n    <div className='container py-4'>\n      <div className='row'>\n        <div className='col-12 col-md-10 mx-auto'>\n          <div className='card shadow-sm rounded border-0'>\n            <div className='card-body p-1'>\n              <div className='card rounded border-0 bg-primary'>\n                <div className='card-body text-center p-4'>\n                  <TopInfo />\n                  <Actions />\n                </div>\n              </div>\n              <Transactions />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { dAppName } from 'config';\nimport { routeNames } from 'routes';\n\nconst Home = () => {\n  return (\n    <div className='d-flex flex-fill align-items-center container'>\n      <div className='row w-100'>\n        <div className='col-12 col-md-8 col-lg-5 mx-auto'>\n          <div className='card shadow-sm rounded p-4 border-0'>\n            <div className='card-body text-center'>\n              <h2 className='mb-3' data-testid='title'>\n                {dAppName}\n              </h2>\n\n              <p className='mb-3'>\n                This is a Vehick demo interaction with the smart contract.\n                <br /> Login using your Elrond Credentials.\n              </p>\n\n              <Link\n                to={routeNames.unlock}\n                className='btn btn-primary mt-3 text-white'\n                data-testid='loginBtn'\n              >\n                Login\n              </Link>\n            </div>\n            <a\n              {...{\n                target: '_blank'\n              }}\n              className='text-center pt-4 text-muted'\n              href='https://github.com/VehickNetwork/dapp-users#readme'\n            >\n              Check steps here...\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\nimport { DappUI, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useLocation, Link } from 'react-router-dom';\nimport { routeNames } from 'routes';\n\nconst Transaction = () => {\n  const { search } = useLocation();\n  const { network } = useGetNetworkConfig();\n\n  const query = new URLSearchParams(search);\n  const { status, txHash } = Object.fromEntries(query);\n\n  return status === 'success' ? (\n    <DappUI.PageState\n      icon={faCheck}\n      iconClass='fa-3x text-success'\n      className='dapp-icon icon-medium'\n      title='Transaction submitted successfully'\n      description={\n        <>\n          <p>\n            <a\n              href={`${network.explorerAddress}/transactions/${txHash}`}\n              {...{\n                target: '_blank'\n              }}\n              className='tx-link'\n              title='View in Explorer'\n            >\n              {txHash}\n            </a>\n          </p>\n          <Link to={routeNames.dashboard} className='btn btn-primary mt-3'>\n            Back to dashboard\n          </Link>\n        </>\n      }\n    />\n  ) : (\n    <DappUI.PageState\n      icon={faTimes}\n      iconClass='fa-3x text-danger'\n      className='dapp-icon icon-medium'\n      title='Error sending transaction'\n      description={\n        <>\n          <p>Try again</p>\n          <a href={routeNames.dashboard} className='btn btn-primary mt-3'>\n            Back to dashboard\n          </a>\n        </>\n      }\n    />\n  );\n};\n\nexport default Transaction;\n","import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n};\n\nconst routes: Array<any> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.transaction,\n    title: 'Transaction',\n    component: Transaction\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title ? `${route.title} • ${dAppName}` : `${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n","import React from 'react';\nimport { ReactComponent as HeartIcon } from '../../../assets/img/heart.svg';\n\nconst Footer = () => {\n  return (\n    <footer className='text-center mt-2 mb-3'>\n      <div>\n        <a\n          {...{\n            target: '_blank'\n          }}\n          className='d-flex align-items-center'\n          href='https://vehicknetwork.com/'\n        >\n          Made with <HeartIcon className='mx-1' /> by Vehick Network.\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Navbar as BsNavbar, NavItem, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { dAppName } from 'config';\nimport { routeNames } from 'routes';\n\nconst Navbar = () => {\n  const { address } = useGetAccountInfo();\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}/unlock`);\n  };\n\n  const isLoggedIn = Boolean(address);\n\n  return (\n    <BsNavbar className='bg-white border-bottom px-4 py-3'>\n      <div className='container-fluid'>\n        <Link\n          className='d-flex align-items-center navbar-brand mr-0'\n          to={isLoggedIn ? routeNames.dashboard : routeNames.home}\n        >\n          <span className='text-3xl text-muted'>{dAppName}</span>\n        </Link>\n\n        <Nav className='ml-auto'>\n          {isLoggedIn && (\n            <NavItem>\n              <button className='btn btn-link' onClick={handleLogout}>\n                Close\n              </button>\n            </NavItem>\n          )}\n        </Nav>\n      </div>\n    </BsNavbar>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { AuthenticatedRoutesWrapper } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport routes, { routeNames } from 'routes';\nimport Footer from './Footer';\nimport Navbar from './Navbar';\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  const { search } = useLocation();\n  return (\n    <div className='bg-light d-flex flex-column flex-fill wrapper'>\n      <Navbar />\n      <main className='d-flex flex-column flex-grow-1'>\n        <AuthenticatedRoutesWrapper\n          routes={routes}\n          unlockRoute={`${routeNames.unlock}${search}`}\n        >\n          {children}\n        </AuthenticatedRoutesWrapper>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  const { pathname } = useLocation();\n  return (\n    <div className='d-flex flex-fill align-items-center container'>\n      <div className='row w-100'>\n        <div className='col-12 col-md-8 col-lg-5 mx-auto'>\n          <div className='card shadow-sm rounded p-4 border-0'>\n            <div className='card-body text-center d-flex flex-column justify-content-center'>\n              <div className='dapp-icon icon-medium'>\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className='mx-auto text-muted fa-3x mb-2'\n                />\n              </div>\n              <span className='h4 empty-heading mt-3'>Page not found</span>\n              <span className='empty-details'>{pathname}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { DappUI, DappProvider } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport PageNotFound from 'pages/PageNotFound';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/build/index.css';\n\nconst environment = 'devnet';\n\nconst {\n  TransactionsToastList,\n  SignTransactionsModals,\n  NotificationModal,\n  DappCorePages: { UnlockPage }\n} = DappUI;\n\nconst App = () => {\n  return (\n    <Router>\n      <DappProvider\n        environment={environment}\n        customNetworkConfig={{ name: 'customConfig', apiTimeout: 6000 }}\n        completedTransactionsDelay={200}\n      >\n        <Layout>\n          <TransactionsToastList />\n          <NotificationModal />\n          <SignTransactionsModals className='custom-class-for-modals' />\n          <Routes>\n            <Route\n              path={routeNames.unlock}\n              element={<UnlockPage loginRoute={routeNames.dashboard} />}\n            />\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n            <Route path='*' element={<PageNotFound />} />\n          </Routes>\n        </Layout>\n      </DappProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}